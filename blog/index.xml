<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Alper Yildirim</title><link>https://yildirimalper.github.io/blog/</link><description>Recent content in Blog on Alper Yildirim</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 12 Mar 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://yildirimalper.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Itertools or no itertools</title><link>https://yildirimalper.github.io/blog/itertools-or-no-itertools/</link><pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate><guid>https://yildirimalper.github.io/blog/itertools-or-no-itertools/</guid><description>When I first saw itertools, I was thinking why anyone would ever need that? However, after using itertools, I can&amp;rsquo;t really think why we should use something else in Python when it comes to data.
I learned about itertools from Joel Grus in one of his PyData Talks. I found it very interesting that he said something like: &amp;ldquo;When I first saw itertools, I was thinking why anyone would ever need that?</description></item><item><title>How to calculate weighted average in PostgreSQL like a boss</title><link>https://yildirimalper.github.io/blog/how-to-calculate-weighted-average-in-postgresql-like-a-boss/</link><pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate><guid>https://yildirimalper.github.io/blog/how-to-calculate-weighted-average-in-postgresql-like-a-boss/</guid><description>As the title says it all, this post is on how to perform weighted average in SQL, which is not a natively-supported aggregation function like sum(), avg() and so on. In order to do so, we will exploit some math and window functions in a cunning ðŸ˜ˆ yet logical way ðŸ¤“ than trying to pull out a physical solution.
In normal data engineering, this approach should not be preferred as it can be super hard to maintain, not scalable and confusing to other people but nevertheless this is a very useful, simple and intuitive hack I figured out for some quick data analysis and getting insights.</description></item></channel></rss>